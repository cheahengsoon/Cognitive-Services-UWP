<Page
    x:Class="CogsExplorer.Modules.Emotion.Views.StartPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:CogsExplorer.Modules.Emotion.Views"
    xmlns:ic="using:Microsoft.Xaml.Interactions.Core"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">
    
    <Page.BottomAppBar>
        <CommandBar>
            <AppBarButton Command="{Binding DetectTopicsCommand}" Label="Detect Topics">
                <AppBarButton.Icon>
                    <FontIcon Glyph="&#xE179;"/>
                </AppBarButton.Icon>
            </AppBarButton>
            <AppBarButton Label="Add Image" Icon="Add" Click="OnAddImageClick"/>
            
        </CommandBar>
    </Page.BottomAppBar>

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <Grid.RowDefinitions>
            <RowDefinition x:Name="TitleRow" Height="Auto" />
            <RowDefinition />
        </Grid.RowDefinitions>

        <TextBlock VerticalAlignment="Top"
                Grid.Row="0"     
                Text="Emotion &amp; Text Analytics"
                x:Name="wideTitleLabel"
                Style="{StaticResource PageTitleStyle}" />

        <TextBlock VerticalAlignment="Top"
                Grid.Row="0"     
                Text="EMOTION &amp; TEXT ANALYTICS"
                x:Name="narrowTitleLabel"
                Style="{StaticResource SmallPageTitleStyle}" />

        <Grid x:Name="mainGrid" Grid.Row="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition />

            </Grid.RowDefinitions>

            <TextBlock HorizontalAlignment="Left" Margin="0,10,0,0" Text="Use Emotion and Text Analytics methods to experiment with image emotion and content sentiment." Style="{ThemeResource BodyTextStyle}"/>

            <Pivot Grid.Row="1">
                <PivotItem>
                    <PivotItem.Header>
                        <TextBlock Text="emotion"/>
                    </PivotItem.Header>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>

                        <TextBlock FontWeight="SemiLight" HorizontalAlignment="Left" Margin="0,0,0,10" Text="Tap add image to select an image to use when performing emotion detection." Style="{ThemeResource BodyTextStyle}"/>

                        <Grid VerticalAlignment="Top" HorizontalAlignment="Left" Grid.Row="1" Height="{Binding CurrentImage.ImageHeight}" Width="{Binding CurrentImage.ImageWidth}">

                            <Canvas x:Name="detectionCanvas" Width="{Binding CurrentImage.ImageWidth}" Height="{Binding CurrentImage.ImageHeight}">
                                <Rectangle Width="{Binding CurrentImage.ImageWidth}" Height="{Binding CurrentImage.ImageHeight}" StrokeDashArray="4 4" Stroke="DarkGray" StrokeThickness="2"/>
                                <Image Source="{Binding CurrentImage.Url}" Stretch="None"/>
                                <Border BorderThickness="1" BorderBrush="DarkGray" Width="{Binding CurrentImage.ImageWidth}" Height="{Binding CurrentImage.ImageHeight}" />
                            </Canvas>

                            <Grid Visibility="{Binding CurrentImage, Converter={StaticResource HasContextToVisibilityConverter},FallbackValue=Collapsed}" Background="#B2000000" RequestedTheme="Dark" VerticalAlignment="Bottom" HorizontalAlignment="Stretch">
                                <StackPanel Orientation="Horizontal" Margin="5" HorizontalAlignment="Center">
                                    <AppBarButton IsEnabled="{Binding IsBusy, Converter={StaticResource BooleanToDisabledConverter}}" Label="Detect Emotion" Command="{Binding CurrentImage.AnalyzeEmotionCommand}">
                                        <AppBarButton.Icon>
                                            <FontIcon Glyph="&#xE8D4;"/>
                                        </AppBarButton.Icon>
                                    </AppBarButton>
                                </StackPanel>
                            </Grid>

                        </Grid>

                        <Grid Visibility="{Binding CurrentImage.SelectedFace, Converter={StaticResource HasContextToVisibilityConverter},FallbackValue=Collapsed}" Margin="40,10" Grid.Row="1" Grid.Column="1">

                            <ItemsControl ItemsSource="{Binding CurrentImage.SelectedFace.Scores}">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel Margin="0,0,0,10" Orientation="Horizontal">
                                            <TextBlock Margin="5,0" Style="{ThemeResource BodyTextStyle}">
                                                <Run Text="{Binding Label}"/>
                                                <Run Text=":"/>
                                            </TextBlock>
                                            <TextBlock FontWeight="SemiBold" Style="{ThemeResource BodyTextStyle}" Text="{Binding Score, Converter={StaticResource EmotionScoreLabelConverter}}"/>
                                        </StackPanel>
                                        
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                            
 
                        </Grid>
                    </Grid>
                </PivotItem>
                <PivotItem>
                    <PivotItem.Header>
                        <TextBlock Text="sentiment"/>
                    </PivotItem.Header>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        
                        <TextBlock FontWeight="SemiLight" HorizontalAlignment="Left" Margin="0,0,0,10" Text="Enter a search query to find news articles to use when performing sentiment analysis." Style="{ThemeResource BodyTextStyle}"/>

                        <SearchBox Margin="10" HorizontalAlignment="Left" Grid.Row="1" PlaceholderText="enter a search topic" Width="300" QueryText="{Binding NewsSearchQuery, Mode=TwoWay}">
                            <i:Interaction.Behaviors>
                                <ic:EventTriggerBehavior EventName="QuerySubmitted">
                                    <ic:InvokeCommandAction Command="{Binding RefreshNewsCommand}"/>
                                </ic:EventTriggerBehavior>
                            </i:Interaction.Behaviors>
                        </SearchBox>

                        <GridView SelectionMode="None" x:Name="newsList" Margin="0,10" Grid.Row="2" ItemsSource="{Binding CurrentNews}">
                            <GridView.ItemTemplate>
                                <DataTemplate>
                                    <Border Margin="0,0,10,10" BorderThickness="1" BorderBrush="{ThemeResource SystemControlForegroundBaseMediumBrush}" Width="300" Height="300" ToolTipService.ToolTip="{Binding Title}">

                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition/>
                                                <RowDefinition Height="Auto" />
                                            </Grid.RowDefinitions>

                                            <Grid VerticalAlignment="Top" RequestedTheme="Dark" Background="{ThemeResource AppMainBlueBrush}">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition />
                                                </Grid.ColumnDefinitions>
                                                <Image VerticalAlignment="Top" Width="100" Height="100" x:Name="image" Stretch="UniformToFill" Source="{Binding ImageUrl}"/>
                                                <TextBlock MaxLines="5" Grid.Column="1" FontWeight="SemiLight" Width="180" Style="{ThemeResource TitleTextStyle}" Margin="10" TextWrapping="Wrap" VerticalAlignment="Center" HorizontalAlignment="Left" Text="{Binding Title}" LineStackingStrategy="BaselineToBaseline" LineHeight="15"/>
                                            </Grid>

                                            <Grid VerticalAlignment="Stretch" RequestedTheme="Dark" Background="{ThemeResource AppMainBlueBrush}" Grid.Row="1">
                                                <StackPanel Orientation="Horizontal">
                                                    <Border HorizontalAlignment="Left" VerticalAlignment="Center" Margin="20" Background="{Binding Sentiment, Converter={StaticResource SentimentScoreToFillConverter}}" Height="20" Width="{Binding Sentiment, Converter={StaticResource SentimentScoreToWidthConverter}}"/>
                                                    <TextBlock Style="{ThemeResource CaptionTextBlockStyle}" VerticalAlignment="Center" Margin="10" Text="{Binding SentimentLabel}"/>
                                                </StackPanel>

                                            </Grid>
                                            <Grid RequestedTheme="Dark" Grid.Row="2" Background="#B2000000">
                                                <StackPanel  Orientation="Horizontal" Margin="5" HorizontalAlignment="Right">
                                                    <AppBarButton IsEnabled="{Binding IsBusy, Converter={StaticResource BooleanToDisabledConverter}}" Label="Analyze" Command="{Binding AnalyzeSentimentCommand}">
                                                        <AppBarButton.Icon>
                                                            <FontIcon Glyph="&#xED39;"/>
                                                        </AppBarButton.Icon>
                                                    </AppBarButton>
                                                </StackPanel>

                                            </Grid>

                                            <ProgressRing Foreground="#FFFFFFFF" IsEnabled="{Binding IsBusy}" IsActive="{Binding IsBusy}" Grid.ColumnSpan="2" Grid.RowSpan="3" Width="100" Height="100" VerticalAlignment="Center" HorizontalAlignment="Center"/>

                                        </Grid>
                                    </Border>
                                </DataTemplate>

                            </GridView.ItemTemplate>

                        </GridView>

                    </Grid>
                </PivotItem>
                <PivotItem>
                    <PivotItem.Header>
                        <TextBlock Text="utilities"/>
                    </PivotItem.Header>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="540"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        
                        <TextBlock Grid.ColumnSpan="2" FontWeight="SemiLight" HorizontalAlignment="Left" Margin="0,0,0,10" Text="Add document content to experiment with sentiment detection key phrase extraction." Style="{ThemeResource BodyTextStyle}"/>

                        <StackPanel Orientation="Vertical" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="20" Grid.Row="1">
                            <TextBox TextWrapping="Wrap" AcceptsReturn="True" PlaceholderText="enter text in any language" Text="{Binding AnalysisContent, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Height="300" Width="500">
                                <TextBox.Header>
                                    <TextBlock Margin="0,0,0,-8" Style="{ThemeResource CaptionTextBlockStyle}" Text="Document content for analysis:"/>
                                </TextBox.Header>
                            </TextBox>
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,5">
                                <AppBarButton Command="{Binding IdentifyLanguageCommand}" Margin="5" Label="Identify Language">
                                    <AppBarButton.Icon>
                                        <FontIcon Glyph="&#xF085;"/>
                                    </AppBarButton.Icon>
                                </AppBarButton>
                                <AppBarButton Command="{Binding ExtractKeyPhrasesCommand}" Margin="5" Label="Extract Key Phrases">
                                    <AppBarButton.Icon>
                                        <FontIcon Glyph="&#xE297;"/>
                                    </AppBarButton.Icon>
                                </AppBarButton>
                            </StackPanel>
                            
                           
                        </StackPanel>

                        <StackPanel Visibility="{Binding DetectedLanguage, Converter={StaticResource HasContextToVisibilityConverter}}" VerticalAlignment="Top" Margin="40" Grid.Row="2" Grid.Column="1">
                            <TextBlock Text="Detected language:" Style="{ThemeResource BodyTextStyle}"/>
                            <TextBlock FontWeight="SemiBold" Style="{ThemeResource BodyTextStyle}">
                                <Run Text="{Binding DetectedLanguage.DisplayName}"/>
                                <Run Text="("/><Run Text="{Binding DetectedLanguage.Abbreviation}"/><Run Text=")"/>                                
                            </TextBlock>
                            <TextBlock Margin="0,20,0,0" Text="Extracted key phrases:" Style="{ThemeResource BodyTextStyle}"/>
                            <ScrollViewer>
                            <ItemsControl HorizontalAlignment="Left" ItemsSource="{Binding ExtractedKeyPhrases}">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Grid RequestedTheme="Dark" Width="160" Margin="0,0,5,5" Background="{ThemeResource AppMainBlueBrush}">
                                                <TextBlock ToolTipService.ToolTip="{Binding}" TextAlignment="Center" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="5" FontWeight="SemiLight" Text="{Binding}" Style="{ThemeResource BodyTextStyle}"/>
                                        </Grid>                                       
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <ItemsWrapGrid Orientation="Vertical" MaximumRowsOrColumns="12"/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                            </ItemsControl>
                            </ScrollViewer>
                        </StackPanel>
                        
                    </Grid>
                </PivotItem>
            </Pivot>

            <ProgressRing Foreground="{ThemeResource AppMainBlueBrush}" IsEnabled="{Binding IsBusy}" IsActive="{Binding IsBusy}" Grid.RowSpan="2" Width="100" Height="100" VerticalAlignment="Center" HorizontalAlignment="Center"/>


        </Grid>


        <!--  Adaptive triggers  -->
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="WindowStates">
                <VisualState x:Name="WideState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="740"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="newsList.HorizontalAlignment"
                                Value="Stretch" />
                        <Setter Target="wideTitleLabel.Visibility"
                                Value="Visible" />
                        <Setter Target="narrowTitleLabel.Visibility"
                                Value="Collapsed" />
                        <Setter Target="wideTitleLabel.Margin"
                                Value="20,20" />
                        <Setter Target="mainGrid.Margin"
                                Value="20,0" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="NarrowState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="newsList.HorizontalAlignment"
                                Value="Center" />
                        <Setter Target="narrowTitleLabel.Margin"
                                Value="50,20" />
                        <Setter Target="wideTitleLabel.Visibility"
                                Value="Collapsed" />
                        <Setter Target="narrowTitleLabel.Visibility"
                                Value="Visible" />
                        <Setter Target="mainGrid.Margin"
                                Value="20,0" />
                        <Setter Target="mainGrid.Margin"
                                Value="20,0" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</Page>
